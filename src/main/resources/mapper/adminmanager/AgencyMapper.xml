<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mtf.admin.mapper.adminmanager.AgencyMapper">

    <select id="findOne" resultType="com.mtf.admin.entity.Agency">
        SELECT
            *
        FROM
            agency
        WHERE
            id = #{id}
    </select>

    <select id="findOneByLoginKeyAndLoginPwd" resultType="com.mtf.admin.entity.Agency">
        SELECT
        *
        FROM
        agency

        <where>
            deleted = 0
            <if test="loginKey != null">
                AND login_name = #{loginKey}
            </if>
            <if test="loginPwd != null">
                AND password = #{loginPwd}
            </if>
        </where>

    </select>

    <insert id="save" parameterType="com.mtf.admin.entity.Agency" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO
            Agency(
                agency_type,
                parent_id,
                parent_nickname,
                password,
                nickname,
                avatar,
                phone,
                room_card,
                coin,
                agency_balance,
                disable,
                deleted,
                create_date,
                creator_id,
                user_id
            )
        VALUES (
                #{agencyType},
                #{parentId},
                #{parentNickname},
                #{password},
                #{nickname},
                #{avatar},
                #{phone},
                #{roomCard},
                #{coin},
                #{agencyBalance},
                #{disable},
                #{deleted},
                #{createDate},
                #{creatorId},
                #{userId}
                )
    </insert>

    <!--递归查询代理人-->
    <select id="findAll" resultType="com.mtf.admin.entity.Agency">
        with temp(
                id,
                agency_type,
                parent_id,
                parent_nickname,
                nickname,
                avatar,
                phone,
                room_card,
                coin,
                agency_balance,
                [disable],
                deleted,
                create_date,
                creator_id,
                user_id,
                level
                )
        AS (
            SELECT
                id,
                agency_type,
                parent_id,
                parent_nickname,
                nickname,
                avatar,
                phone,
                room_card,
                coin,
                agency_balance,
                [disable],
                deleted,
                create_date,
                creator_id,
                user_id,
                0 AS level
            FROM agency WHERE id = #{agencyId}
            UNION ALL
            SELECT
                a.id,
                a.agency_type,
                a.parent_id,
                a.parent_nickname,
                a.nickname,
                a.avatar,
                a.phone,
                a.room_card,
                a.coin,
                a.agency_balance,
                a.[disable],
                a.deleted,
                a.create_date,
                a.creator_id,
                a.user_id,
                temp.level + 1
            FROM agency a INNER JOIN temp on a.parent_id = temp.id
        )
        SELECT
            *
        FROM
            temp
        <where>
                (deleted = 0 or deleted is null)
                AND level <![CDATA[<>]]> 0
            <if test="level != null">
                AND level <![CDATA[<=]]> #{level}
            </if>
            <if test="params.agencyId != null and params.agencyId != ''">
                AND id = #{params.agencyId}
            </if>
            <if test="params.nickname != null and params.nickname != ''">
                AND nickname like '%' + #{params.nickname} + '%'
            </if>
            <if test="params.parentId != null and params.parentId != ''">
                AND parent_id = #{params.parentId}
            </if>
        </where>
    </select>

    <select id="getTreasureById" resultType="com.mtf.admin.entity.Agency">
        SELECT
            coin,
            room_card
        FROM
            agency
        WHERE
            id = #{agencyId}
    </select>

    <update id="updateCoinPlus">
        UPDATE
            agency
        SET
            coin += #{quantity}
        WHERE
        id = #{agencyId}
    </update>

    <update id="updateRoomCardPlus">
        UPDATE
            agency
        SET
            room_card += #{quantity}
        WHERE
        id = #{agencyId}
    </update>

    <update id="updateCoinMinus">
        UPDATE
            agency
        SET
            coin -= #{quantity}
        WHERE
            id = #{agencyId}
    </update>

    <update id="updateRoomCardMinus">
        UPDATE
            agency
        SET
            room_card -= #{quantity}
        WHERE
        id = #{agencyId}
    </update>

    <select id="getCoinSumByAgencyId" resultType="_long">
        SELECT
            sum(quantity)
        FROM
            coin_record
        WHERE
            from_agency_id = #{agencyId}
    </select>

    <select id="getRoomCardSumByAgencyId" resultType="_long">
        SELECT
            sum(quantity)
        FROM
            room_card_record
        WHERE
            from_agency_id = #{agencyId}
    </select>

    <select id="getCount" resultType="_int">
        with temp(
                id,
                parent_id,
                deleted,
                level
                )
        AS (
        SELECT
            id,
            parent_id,
            deleted,
            0 AS level
        FROM agency WHERE id = #{agencyId}
        UNION ALL
        SELECT
            a.id,
            a.parent_id,
            a.deleted,
            temp.level + 1
        FROM agency a INNER JOIN temp on a.parent_id = temp.id
        )
        SELECT
            count(*)
        FROM
            temp
        <where>
            (deleted = 0 or deleted is null)
            AND level <![CDATA[<>]]> 0
            <if test="level != null">
                AND level <![CDATA[<=]]> #{level}
            </if>
        </where>
    </select>

    <select id="getTotalIncome" resultType="_long">
        WITH
            temp(id, level)
        AS (
        SELECT
            id, 0 AS level
        FROM agency
        WHERE id = #{agencyId}
        UNION ALL
        SELECT
            a.id, temp.level + 1
        FROM agency a
        INNER JOIN temp ON a.parent_id = temp.id
        WHERE a.deleted = 0 OR a.deleted is null
        )
        SELECT
            ISNULL(sum(o.CostMoney), 0)
        FROM
            [QPAccountsDB].[dbo].[AccountsInfo] ai
        INNER JOIN temp t ON ai.SpreaderID = t.id
        INNER JOIN [QPRecordDB].[dbo].[RecordBuyOder] o ON o.UserID = ai.UserID
        <where>
            <if test="level != null">
                t.level <![CDATA[<=]]> #{level}
            </if>
        </where>
    </select>

    <update id="update">
        UPDATE
            agency
        <set>
            <if test="agencyType != null">
                agency_type = #{agencyType},
            </if>
            <if test="deleted != null">
                deleted = #{deleted},
            </if>
            <if test="disable != null">
                disable = CASE WHEN disable = 0 THEN 1 ELSE 0 END
            </if>
        </set>
        WHERE
            id = #{agencyId}
    </update>

</mapper>