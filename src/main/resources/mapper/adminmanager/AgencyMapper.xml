<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mtf.admin.mapper.adminmanager.AgencyMapper">

    <select id="findOne" resultType="com.mtf.admin.entity.Agency">
        SELECT
            *
        FROM
            agency
        WHERE
            id = #{id}
    </select>

    <select id="findOneByLoginKeyAndLoginPwd" resultType="com.mtf.admin.entity.Agency">
        SELECT
        *
        FROM
        agency

        <where>
            deleted = 0
            <if test="loginKey != null">
                AND id = #{loginKey}
            </if>
            <if test="loginPwd != null">
                AND password = #{loginPwd}
            </if>
        </where>

    </select>

    <insert id="save" parameterType="com.mtf.admin.entity.Agency">
        INSERT INTO
            Agency(
                id,
                agency_type,
                parent_id,
                parent_nickname,
                password,
                nickname,
                avatar,
                phone,
                room_card,
                coin,
                agency_balance,
                disable,
                deleted,
                create_date,
                creator_id,
                user_id,
                qrcode
            )
        VALUES (
                #{id},
                #{agencyType},
                #{parentId},
                #{parentNickname},
                #{password},
                #{nickname},
                #{avatar},
                #{phone},
                #{roomCard},
                #{coin},
                #{agencyBalance},
                #{disable},
                #{deleted},
                #{createDate},
                #{creatorId},
                #{userId},
                #{qrcode}
                )
    </insert>

    <!--递归查询代理人-->
    <select id="findAll" resultType="com.mtf.admin.entity.Agency">
        with temp(
                id,
                agency_type,
                parent_id,
                parent_nickname,
                nickname,
                avatar,
                phone,
                room_card,
                coin,
                agency_balance,
                [disable],
                deleted,
                create_date,
                creator_id,
                user_id,
                level
                )
        AS (
            SELECT
                id,
                agency_type,
                parent_id,
                parent_nickname,
                nickname,
                avatar,
                phone,
                room_card,
                coin,
                agency_balance,
                [disable],
                deleted,
                create_date,
                creator_id,
                user_id,
                0 AS level
            FROM agency WHERE id = #{agencyId}
            UNION ALL
            SELECT
                a.id,
                a.agency_type,
                a.parent_id,
                a.parent_nickname,
                a.nickname,
                a.avatar,
                a.phone,
                a.room_card,
                a.coin,
                a.agency_balance,
                a.[disable],
                a.deleted,
                a.create_date,
                a.creator_id,
                a.user_id,
                temp.level + 1
            FROM agency a INNER JOIN temp on a.parent_id = temp.id
        )
        SELECT
            *
        FROM
            temp
        <where>
                (deleted = 0 or deleted is null)
                AND level <![CDATA[<>]]> 0
            <if test="level != null">
                AND level <![CDATA[<=]]> #{level}
            </if>
            <if test="params.agencyId != null and params.agencyId != ''">
                AND id = #{params.agencyId}
            </if>
            <if test="params.nickname != null and params.nickname != ''">
                AND nickname like '%' + #{params.nickname} + '%'
            </if>
            <if test="params.parentId != null and params.parentId != ''">
                AND parent_id = #{params.parentId}
            </if>
        </where>
    </select>

    <select id="getTreasureById" resultType="com.mtf.admin.entity.Agency">
        SELECT
            coin,
            room_card,
            agency_balance
        FROM
            agency
        WHERE
            id = #{agencyId}
    </select>

    <update id="updateCoinPlus">
        UPDATE
            agency
        SET
            coin = ISNULL(coin,0) + #{quantity}
        WHERE
        id = #{agencyId}
    </update>

    <update id="updateRoomCardPlus">
        UPDATE
            agency
        SET
            room_card = ISNULL(room_card,0) + #{quantity}
        WHERE
        id = #{agencyId}
    </update>

    <update id="updateCoinMinus">
        UPDATE
            agency
        SET
            coin -= #{quantity}
        WHERE
            id = #{agencyId}
    </update>

    <update id="updateRoomCardMinus">
        UPDATE
            agency
        SET
            room_card -= #{quantity}
        WHERE
        id = #{agencyId}
    </update>

    <select id="getCoinSumByAgencyId" resultType="_long">
        SELECT
            sum(quantity)
        FROM
            coin_record
        WHERE
            from_agency_id = #{agencyId}
    </select>

    <select id="getRoomCardSumByAgencyId" resultType="_long">
        SELECT
            sum(quantity)
        FROM
            room_card_record
        WHERE
            from_agency_id = #{agencyId}
    </select>

    <select id="getCount" resultType="_int">
        with temp(
                id,
                parent_id,
                deleted,
                level
                )
        AS (
        SELECT
            id,
            parent_id,
            deleted,
            0 AS level
        FROM agency WHERE id = #{agencyId}
        UNION ALL
        SELECT
            a.id,
            a.parent_id,
            a.deleted,
            temp.level + 1
        FROM agency a INNER JOIN temp on a.parent_id = temp.id
        )
        SELECT
            count(*)
        FROM
            temp
        <where>
            (deleted = 0 or deleted is null)
            AND level <![CDATA[<>]]> 0
            <if test="level != null">
                AND level <![CDATA[<=]]> #{level}
            </if>
        </where>
    </select>

    <select id="getTotalIncome" resultType="_long">
        WITH
            temp(id, level)
        AS (
        SELECT
            id, 0 AS level
        FROM agency
        WHERE id = #{agencyId}
        UNION ALL
        SELECT
            a.id, temp.level + 1
        FROM agency a
        INNER JOIN temp ON a.parent_id = temp.id
        WHERE a.deleted = 0 OR a.deleted is null
        )
        SELECT
            ISNULL(sum(o.CostMoney), 0)
        FROM
            [QPAccountsDB].[dbo].[AccountsInfo] ai
        INNER JOIN temp t ON ai.SpreaderID = t.id
        INNER JOIN [QPRecordDB].[dbo].[RecordBuyOder] o ON o.UserID = ai.UserID
        <where>
            <if test="level != null">
                t.level <![CDATA[<=]]> #{level}
            </if>
        </where>
    </select>

    <update id="update">
        UPDATE
            agency
        <set>
            <if test="agencyType != null">
                agency_type = #{agencyType},
            </if>
            <if test="deleted != null">
                deleted = #{deleted},
            </if>
            <if test="disable != null">
                disable = CASE WHEN disable = 0 THEN 1 ELSE 0 END
            </if>
            <if test="password != null and password != ''">
                password = #{password}
            </if>
            <if test="qrcode != null and qrcode != ''">
                qrcode = #{qrcode}
            </if>
        </set>
        WHERE
            id = #{agencyId}
    </update>

    <select id="getMoneyFlowVO" resultType="com.mtf.admin.common.vo.MoneyFlowVO">
        WITH temp(id, level)
        AS (
            SELECT id, 0 AS level
            FROM agency WHERE id = #{agencyId}
            UNION ALL
            SELECT a.id, temp.level+1 FROM agency a
            JOIN temp ON a.parent_id = temp.id
            WHERE a.deleted = 0 OR a.deleted IS NULL
        )
        SELECT
            mv.month AS month,
            sum(isnull(e.CostMoney, 0)) AS money
        FROM
            temp t
        JOIN
            [QPAccountsDB].[dbo].[AccountsInfo] ai
        ON ai.SpreaderID = t.id
        JOIN
            (SELECT * FROM [QPRecordDB].[dbo].[RecordBuyOder] WHERE year(OderDate) = #{year}) e
        ON ai.UserID = e.UserID
        RIGHT JOIN
            month_view mv ON month(e.OderDate) = mv.month
        GROUP BY mv.month
    </select>

    <select id="finByUserId" resultType="com.mtf.admin.entity.Agency">
         SELECT
            *
        FROM
            agency
        WHERE
            user_id = #{userId}
    </select>

    <select id="getMoneyFlowVODetail" resultType="com.mtf.admin.common.vo.SellRecordVO">
        WITH temp(id, level )
        AS (
            SELECT
                id,
                0 AS level
            FROM agency
            WHERE id = #{agencyId}
            UNION ALL
            SELECT
                a.id,
                temp.level + 1
            FROM agency a
            JOIN temp ON a.parent_id = temp.id
            WHERE a.deleted = 0 OR a.deleted IS NULL
        )
        SELECT
            ai.UserID AS userId,
            ai.NickName AS userNickname,
            e.CostMoney AS costMoney,
            e.OderDate AS orderDatetime
        FROM
          temp t
        JOIN
          [QPAccountsDB].[dbo].[AccountsInfo] ai
        ON ai.SpreaderID = t.id
        JOIN
            ( SELECT *
            FROM [QPRecordDB].[dbo].[RecordBuyOder]
            WHERE year (OderDate) = #{year}
            AND month (OderDate) = #{month}
            ) e
        ON ai.UserID = e.UserID
        <if test="userId != null">
            WHERE ai.UserID = #{userId}
        </if>
    </select>

    <select id="getSellRecordVO" resultType="com.mtf.admin.common.vo.SellRecordVO">
        WITH temp(id, nickname, avatar, level)
        AS (
            SELECT id, nickname, avatar, 0 AS level
            FROM agency WHERE id = #{agencyId}
            UNION ALL
            SELECT a.id, a.nickname, a.avatar, temp.level+1 FROM agency a
                JOIN temp ON a.parent_id = temp.id
            WHERE a.deleted = 0 OR a.deleted IS NULL
        )
        SELECT
            rbo.RecordID AS orderId,
            ai.UserID AS userId,
            ai.NickName AS userNickname,
            id.HeadHttp AS userImage,
            temp.id AS agencyId,
            temp.nickname AS agencyNickname,
            temp.avatar AS agencyImage,
            rbo.GetType AS getType,
            rbo.GetNums AS getNums,
            rbo.CostMoney AS costMoney,
            rbo.OderDate AS orderDatetime
        FROM
            temp
        JOIN [QPAccountsDB].[dbo].[AccountsInfo] ai
            ON temp.id = ai.SpreaderID
        LEFT JOIN [QPAccountsDB].[dbo].[IndividualDatum] id
            ON ai.UserID = id.UserID
        JOIN [QPRecordDB].[dbo].[RecordBuyOder] rbo
            ON ai.UserID = rbo.UserID
        <where>
            <if test="directAgencyId != null">
                ai.SpreaderID = #{directAgencyId}
            </if>
            <if test="directPlayerId != null">
                and ai.UserID = #{directPlayerId}
            </if>
        </where>
    </select>

    <select id="getPerformanceVO" resultType="com.mtf.admin.common.vo.PerformanceVO">
        SELECT
            mv.month AS month,
            sum(
                CASE WHEN level = 1 THEN isnull(money, 0) ELSE 0 END
            ) AS levelOneMoney,
            sum(
                CASE WHEN level = 2 THEN isnull(money, 0) ELSE 0 END
            ) AS levelTwoMoney
        FROM
            (SELECT * FROM performance WHERE agency_id = #{agencyId} AND year(cash_back_datetime) = #{year}) t
        RIGHT JOIN
            month_view mv ON mv.month = month(t.cash_back_datetime)
        GROUP BY
            mv.month
    </select>

    <select id="getPerformanceVODetail" resultType="com.mtf.admin.common.vo.PerformanceDetailVO">
        SELECT
            ai.UserID AS userId,
            ai.NickName AS nickname,
            p.money AS backMoney,
            o.CostMoney AS costMoney,
            p.cash_back_datetime AS payDatetime
        FROM
            performance p
        LEFT JOIN
            [QPRecordDB].[dbo].[RecordBuyOder] o
        ON
            p.record_buy_order_id = o.RecordID
        INNER JOIN
            [QPAccountsDB].[dbo].[AccountsInfo] ai
        ON
            o.UserID = ai.UserID
        <where>
            year(p.cash_back_datetime) = #{year}
            AND
            month(p.cash_back_datetime) = #{month}
            <if test="userId != null">
                AND o.UserID = #{userId}
            </if>
        </where>
    </select>

    <update id="updateAgencyBalance">
        UPDATE
            agency
        SET
            agency_balance = #{money}
        WHERE
            id = #{agencyId}
    </update>

</mapper>